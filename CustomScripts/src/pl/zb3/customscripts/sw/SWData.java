// Generated by the protocol buffer compiler.  DO NOT EDIT!

package pl.zb3.customscripts.sw;

@SuppressWarnings("hiding")
public interface SWData {

  public static final class ServiceWorkerOriginTrialFeature extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ServiceWorkerOriginTrialFeature[] _emptyArray;
    public static ServiceWorkerOriginTrialFeature[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServiceWorkerOriginTrialFeature[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string name = 1;
    public java.lang.String name;

    // repeated string tokens = 2;
    public java.lang.String[] tokens;

    public ServiceWorkerOriginTrialFeature() {
      clear();
    }

    public ServiceWorkerOriginTrialFeature clear() {
      name = "";
      tokens = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.name);
      if (this.tokens != null && this.tokens.length > 0) {
        for (int i = 0; i < this.tokens.length; i++) {
          java.lang.String element = this.tokens[i];
          if (element != null) {
            output.writeString(2, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.name);
      if (this.tokens != null && this.tokens.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.tokens.length; i++) {
          java.lang.String element = this.tokens[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public ServiceWorkerOriginTrialFeature mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.name = input.readString();
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.tokens == null ? 0 : this.tokens.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.tokens, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.tokens = newArray;
            break;
          }
        }
      }
    }

    public static ServiceWorkerOriginTrialFeature parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServiceWorkerOriginTrialFeature(), data);
    }

    public static ServiceWorkerOriginTrialFeature parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServiceWorkerOriginTrialFeature().mergeFrom(input);
    }
  }

  public static final class ServiceWorkerOriginTrialInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ServiceWorkerOriginTrialInfo[] _emptyArray;
    public static ServiceWorkerOriginTrialInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServiceWorkerOriginTrialInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .content.ServiceWorkerOriginTrialFeature features = 1;
    public pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialFeature[] features;

    public ServiceWorkerOriginTrialInfo() {
      clear();
    }

    public ServiceWorkerOriginTrialInfo clear() {
      features = pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialFeature.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.features != null && this.features.length > 0) {
        for (int i = 0; i < this.features.length; i++) {
          pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialFeature element = this.features[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.features != null && this.features.length > 0) {
        for (int i = 0; i < this.features.length; i++) {
          pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialFeature element = this.features[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public ServiceWorkerOriginTrialInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.features == null ? 0 : this.features.length;
            pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialFeature[] newArray =
                new pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialFeature[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.features, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialFeature();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialFeature();
            input.readMessage(newArray[i]);
            this.features = newArray;
            break;
          }
        }
      }
    }

    public static ServiceWorkerOriginTrialInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServiceWorkerOriginTrialInfo(), data);
    }

    public static ServiceWorkerOriginTrialInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServiceWorkerOriginTrialInfo().mergeFrom(input);
    }
  }

  public static final class ServiceWorkerNavigationPreloadState extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ServiceWorkerNavigationPreloadState[] _emptyArray;
    public static ServiceWorkerNavigationPreloadState[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServiceWorkerNavigationPreloadState[0];
          }
        }
      }
      return _emptyArray;
    }

    // required bool enabled = 1;
    public boolean enabled;

    // optional string header = 2;
    public java.lang.String header;

    public ServiceWorkerNavigationPreloadState() {
      clear();
    }

    public ServiceWorkerNavigationPreloadState clear() {
      enabled = false;
      header = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeBool(1, this.enabled);
      if (!this.header.equals("")) {
        output.writeString(2, this.header);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(1, this.enabled);
      if (!this.header.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.header);
      }
      return size;
    }

    @Override
    public ServiceWorkerNavigationPreloadState mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.enabled = input.readBool();
            break;
          }
          case 18: {
            this.header = input.readString();
            break;
          }
        }
      }
    }

    public static ServiceWorkerNavigationPreloadState parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServiceWorkerNavigationPreloadState(), data);
    }

    public static ServiceWorkerNavigationPreloadState parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServiceWorkerNavigationPreloadState().mergeFrom(input);
    }
  }

  public static final class ServiceWorkerRegistrationData extends
      com.google.protobuf.nano.MessageNano {

    // enum ServiceWorkerUpdateViaCacheType
    public static final int IMPORTS = 0;
    public static final int ALL = 1;
    public static final int NONE = 2;

    private static volatile ServiceWorkerRegistrationData[] _emptyArray;
    public static ServiceWorkerRegistrationData[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServiceWorkerRegistrationData[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int64 registration_id = 1;
    public long registrationId;

    // required string scope_url = 2;
    public java.lang.String scopeUrl;

    // required string script_url = 3;
    public java.lang.String scriptUrl;

    // required int64 version_id = 4;
    public long versionId;

    // required bool is_active = 5;
    public boolean isActive;

    // required bool has_fetch_handler = 6;
    public boolean hasFetchHandler;

    // required int64 last_update_check_time = 7;
    public long lastUpdateCheckTime;

    // optional uint64 resources_total_size_bytes = 8;
    public long resourcesTotalSizeBytes;

    // optional .content.ServiceWorkerOriginTrialInfo origin_trial_tokens = 11;
    public pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialInfo originTrialTokens;

    // optional .content.ServiceWorkerNavigationPreloadState navigation_preload_state = 12;
    public pl.zb3.customscripts.sw.SWData.ServiceWorkerNavigationPreloadState navigationPreloadState;

    // repeated uint32 used_features = 13;
    public int[] usedFeatures;

    // optional .content.ServiceWorkerRegistrationData.ServiceWorkerUpdateViaCacheType update_via_cache = 14 [default = IMPORTS];
    public int updateViaCache;

    public ServiceWorkerRegistrationData() {
      clear();
    }

    public ServiceWorkerRegistrationData clear() {
      registrationId = 0L;
      scopeUrl = "";
      scriptUrl = "";
      versionId = 0L;
      isActive = false;
      hasFetchHandler = false;
      lastUpdateCheckTime = 0L;
      resourcesTotalSizeBytes = 0L;
      originTrialTokens = null;
      navigationPreloadState = null;
      usedFeatures = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
      updateViaCache = pl.zb3.customscripts.sw.SWData.ServiceWorkerRegistrationData.IMPORTS;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt64(1, this.registrationId);
      output.writeString(2, this.scopeUrl);
      output.writeString(3, this.scriptUrl);
      output.writeInt64(4, this.versionId);
      output.writeBool(5, this.isActive);
      output.writeBool(6, this.hasFetchHandler);
      output.writeInt64(7, this.lastUpdateCheckTime);
      if (this.resourcesTotalSizeBytes != 0L) {
        output.writeUInt64(8, this.resourcesTotalSizeBytes);
      }
      if (this.originTrialTokens != null) {
        output.writeMessage(11, this.originTrialTokens);
      }
      if (this.navigationPreloadState != null) {
        output.writeMessage(12, this.navigationPreloadState);
      }
      if (this.usedFeatures != null && this.usedFeatures.length > 0) {
        for (int i = 0; i < this.usedFeatures.length; i++) {
          output.writeUInt32(13, this.usedFeatures[i]);
        }
      }
      if (this.updateViaCache != pl.zb3.customscripts.sw.SWData.ServiceWorkerRegistrationData.IMPORTS) {
        output.writeInt32(14, this.updateViaCache);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(1, this.registrationId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.scopeUrl);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.scriptUrl);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(4, this.versionId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(5, this.isActive);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBoolSize(6, this.hasFetchHandler);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(7, this.lastUpdateCheckTime);
      if (this.resourcesTotalSizeBytes != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(8, this.resourcesTotalSizeBytes);
      }
      if (this.originTrialTokens != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(11, this.originTrialTokens);
      }
      if (this.navigationPreloadState != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(12, this.navigationPreloadState);
      }
      if (this.usedFeatures != null && this.usedFeatures.length > 0) {
        int dataSize = 0;
        for (int i = 0; i < this.usedFeatures.length; i++) {
          int element = this.usedFeatures[i];
          dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * this.usedFeatures.length;
      }
      if (this.updateViaCache != pl.zb3.customscripts.sw.SWData.ServiceWorkerRegistrationData.IMPORTS) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(14, this.updateViaCache);
      }
      return size;
    }

    @Override
    public ServiceWorkerRegistrationData mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.registrationId = input.readInt64();
            break;
          }
          case 18: {
            this.scopeUrl = input.readString();
            break;
          }
          case 26: {
            this.scriptUrl = input.readString();
            break;
          }
          case 32: {
            this.versionId = input.readInt64();
            break;
          }
          case 40: {
            this.isActive = input.readBool();
            break;
          }
          case 48: {
            this.hasFetchHandler = input.readBool();
            break;
          }
          case 56: {
            this.lastUpdateCheckTime = input.readInt64();
            break;
          }
          case 64: {
            this.resourcesTotalSizeBytes = input.readUInt64();
            break;
          }
          case 90: {
            if (this.originTrialTokens == null) {
              this.originTrialTokens = new pl.zb3.customscripts.sw.SWData.ServiceWorkerOriginTrialInfo();
            }
            input.readMessage(this.originTrialTokens);
            break;
          }
          case 98: {
            if (this.navigationPreloadState == null) {
              this.navigationPreloadState = new pl.zb3.customscripts.sw.SWData.ServiceWorkerNavigationPreloadState();
            }
            input.readMessage(this.navigationPreloadState);
            break;
          }
          case 104: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 104);
            int i = this.usedFeatures == null ? 0 : this.usedFeatures.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.usedFeatures, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readUInt32();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readUInt32();
            this.usedFeatures = newArray;
            break;
          }
          case 106: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            // First pass to compute array length.
            int arrayLength = 0;
            int startPos = input.getPosition();
            while (input.getBytesUntilLimit() > 0) {
              input.readUInt32();
              arrayLength++;
            }
            input.rewindToPosition(startPos);
            int i = this.usedFeatures == null ? 0 : this.usedFeatures.length;
            int[] newArray = new int[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.usedFeatures, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readUInt32();
            }
            this.usedFeatures = newArray;
            input.popLimit(limit);
            break;
          }
          case 112: {
            int value = input.readInt32();
            switch (value) {
              case pl.zb3.customscripts.sw.SWData.ServiceWorkerRegistrationData.IMPORTS:
              case pl.zb3.customscripts.sw.SWData.ServiceWorkerRegistrationData.ALL:
              case pl.zb3.customscripts.sw.SWData.ServiceWorkerRegistrationData.NONE:
                this.updateViaCache = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static ServiceWorkerRegistrationData parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServiceWorkerRegistrationData(), data);
    }

    public static ServiceWorkerRegistrationData parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServiceWorkerRegistrationData().mergeFrom(input);
    }
  }

  public static final class ServiceWorkerResourceRecord extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ServiceWorkerResourceRecord[] _emptyArray;
    public static ServiceWorkerResourceRecord[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ServiceWorkerResourceRecord[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int64 resource_id = 1;
    public long resourceId;

    // required string url = 2;
    public java.lang.String url;

    // optional uint64 size_bytes = 3;
    public long sizeBytes;

    public ServiceWorkerResourceRecord() {
      clear();
    }

    public ServiceWorkerResourceRecord clear() {
      resourceId = 0L;
      url = "";
      sizeBytes = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt64(1, this.resourceId);
      output.writeString(2, this.url);
      if (this.sizeBytes != 0L) {
        output.writeUInt64(3, this.sizeBytes);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt64Size(1, this.resourceId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.url);
      if (this.sizeBytes != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(3, this.sizeBytes);
      }
      return size;
    }

    @Override
    public ServiceWorkerResourceRecord mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.resourceId = input.readInt64();
            break;
          }
          case 18: {
            this.url = input.readString();
            break;
          }
          case 24: {
            this.sizeBytes = input.readUInt64();
            break;
          }
        }
      }
    }

    public static ServiceWorkerResourceRecord parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ServiceWorkerResourceRecord(), data);
    }

    public static ServiceWorkerResourceRecord parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ServiceWorkerResourceRecord().mergeFrom(input);
    }
  }
}
